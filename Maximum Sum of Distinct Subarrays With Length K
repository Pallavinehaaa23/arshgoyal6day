class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        int i=0,j=0;
        int n=nums.size();
        unordered_map<int,int>mp;
        long long sum=0,maxi=0;
        while(j<n){
            mp[nums[j]]++;
            sum+=nums[j];
            if(mp[nums[j]]>1){
                while(mp[nums[j]]>1){
                    mp[nums[i]]--;
                    sum-=nums[i];
                    i++;
                }

            }
            if(j-i+1>k){
                sum-=nums[i];
                mp[nums[i]]--;
                i++;
            }
            if(j-i+1==k){
             maxi=max(maxi,sum);
            }
            
            j++;
        }
        return maxi;
    }
};
